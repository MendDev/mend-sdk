{"C:/Users/mattm/Documents/GitHub/mend-sdk/src/errors.ts":{"path":"C:/Users/mattm/Documents/GitHub/mend-sdk/src/errors.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":19}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":28}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":21}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":25}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":53}},"5":{"start":{"line":10,"column":27},"end":{"line":17,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":2},"end":{"line":2,"column":3}},"loc":{"start":{"line":2,"column":37},"end":{"line":8,"column":3}},"line":2}},"branchMap":{},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"sources":["C:/Users/mattm/Documents/GitHub/mend-sdk/src/errors.ts"],"sourcesContent":["/**\r\n * Custom error class for Mend SDK\r\n */\r\nexport class MendError extends Error {\r\n  /** Programmatic error category */\r\n  code: string;\r\n  /** HTTP status if applicable */\r\n  status?: number;\r\n\r\n  constructor(message: string, code: string, status?: number) {\r\n    super(message);\r\n    this.name = 'MendError';\r\n    this.code = code;\r\n    this.status = status;\r\n    \r\n    // Ensures proper prototype chain for instanceof checks\r\n    Object.setPrototypeOf(this, MendError.prototype);\r\n  }\r\n}\r\n\r\n// Common error codes\r\nexport const ERROR_CODES = {\r\n  SDK_CONFIG: 'SDK_CONFIG',\r\n  AUTH_MISSING_TOKEN: 'AUTH_MISSING_TOKEN',\r\n  AUTH_MFA_REQUIRED: 'AUTH_MFA_REQUIRED',\r\n  AUTH_INVALID_MFA: 'AUTH_INVALID_MFA',\r\n  ORG_NOT_FOUND: 'ORG_NOT_FOUND',\r\n  HTTP_ERROR: 'HTTP_ERROR',\r\n} as const;\r\n\r\nexport type ErrorCode = keyof typeof ERROR_CODES;\r\n"],"mappings":"AAGO,aAAM,kBAAkB,MAAM;AAAA,EAMnC,YAAY,SAAiB,MAAc,QAAiB;AAC1D,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS;AAGd,WAAO,eAAe,MAAM,UAAU,SAAS;AAAA,EACjD;AACF;AAGO,aAAM,cAAc;AAAA,EACzB,YAAY;AAAA,EACZ,oBAAoB;AAAA,EACpB,mBAAmB;AAAA,EACnB,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,YAAY;AACd;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"70455fc539e103aa0cc099019e5e53431f5e9f68"},"C:/Users/mattm/Documents/GitHub/mend-sdk/src/http.ts":{"path":"C:/Users/mattm/Documents/GitHub/mend-sdk/src/http.ts","statementMap":{"0":{"start":{"line":4,"column":4},"end":{"line":4,"column":61}},"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":54}},"2":{"start":{"line":19,"column":15},"end":{"line":19,"column":91}},"3":{"start":{"line":20,"column":16},"end":{"line":20,"column":44}},"4":{"start":{"line":21,"column":27},"end":{"line":26,"column":5}},"5":{"start":{"line":27,"column":17},"end":{"line":32,"column":6}},"6":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"7":{"start":{"line":34,"column":6},"end":{"line":34,"column":107}},"8":{"start":{"line":36,"column":17},"end":{"line":36,"column":34}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":44}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":22},"end":{"line":6,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":68},"end":{"line":38,"column":3}},"line":18},"2":{"name":"createHttpClient","decl":{"start":{"line":40,"column":16},"end":{"line":40,"column":32}},"loc":{"start":{"line":40,"column":41},"end":{"line":42,"column":1}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":26},"end":{"line":5,"column":53}},"type":"binary-expr","locations":[{"start":{"line":5,"column":26},"end":{"line":5,"column":47}},{"start":{"line":5,"column":51},"end":{"line":5,"column":53}}],"line":5},"1":{"loc":{"start":{"line":18,"column":34},"end":{"line":18,"column":44}},"type":"default-arg","locations":[{"start":{"line":18,"column":42},"end":{"line":18,"column":44}}],"line":18},"2":{"loc":{"start":{"line":18,"column":46},"end":{"line":18,"column":58}},"type":"default-arg","locations":[{"start":{"line":18,"column":56},"end":{"line":18,"column":58}}],"line":18},"3":{"loc":{"start":{"line":19,"column":15},"end":{"line":19,"column":91}},"type":"cond-expr","locations":[{"start":{"line":19,"column":43},"end":{"line":19,"column":86}},{"start":{"line":19,"column":89},"end":{"line":19,"column":91}}],"line":19},"4":{"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":48}},"type":"cond-expr","locations":[{"start":{"line":30,"column":19},"end":{"line":30,"column":39}},{"start":{"line":30,"column":42},"end":{"line":30,"column":48}}],"line":30},"5":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{},"end":{}}],"line":33},"6":{"loc":{"start":{"line":37,"column":11},"end":{"line":37,"column":43}},"type":"cond-expr","locations":[{"start":{"line":37,"column":18},"end":{"line":37,"column":34}},{"start":{"line":37,"column":37},"end":{"line":37,"column":43}}],"line":37}},"s":{"0":19,"1":19,"2":57,"3":57,"4":57,"5":57,"6":54,"7":0,"8":54,"9":54,"10":19},"f":{"0":19,"1":57,"2":19},"b":{"0":[19,19],"1":[0],"2":[0],"3":[2,55],"4":[45,12],"5":[0,54],"6":[54,0]},"inputSourceMap":{"version":3,"sources":["C:/Users/mattm/Documents/GitHub/mend-sdk/src/http.ts"],"sourcesContent":["import { MendError, ERROR_CODES } from './errors';\r\n\r\n/**\r\n * HTTP verb types supported by the API\r\n */\r\nexport type HttpVerb = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\r\n\r\n/**\r\n * Generic JSON response type with type parameter\r\n */\r\nexport interface Json<T = unknown> extends Record<string, T> {}\r\n\r\n/**\r\n * Configuration for the HTTP client\r\n */\r\nexport interface HttpClientConfig {\r\n  apiEndpoint: string;\r\n  defaultHeaders?: Record<string, string>;\r\n}\r\n\r\n/**\r\n * Low-level HTTP client for making API requests\r\n */\r\nexport class HttpClient {\r\n  private readonly apiEndpoint: string;\r\n  private readonly defaultHeaders: Record<string, string>;\r\n\r\n  constructor(config: HttpClientConfig) {\r\n    this.apiEndpoint = config.apiEndpoint.replace(/\\/$/, '');\r\n    this.defaultHeaders = config.defaultHeaders ?? {};\r\n  }\r\n\r\n  /**\r\n   * Make an HTTP request to the API\r\n   * \r\n   * @param method HTTP method to use\r\n   * @param path API path (will be appended to apiEndpoint)\r\n   * @param body Optional request body\r\n   * @param query Optional query parameters\r\n   * @param headers Optional additional headers\r\n   * @param signal Optional AbortSignal for cancellation\r\n   * @returns Promise resolving to the response data\r\n   */\r\n  public async fetch<T = Json<any>>(\r\n    method: HttpVerb,\r\n    path: string,\r\n    body?: unknown,\r\n    query: Record<string, string | number | boolean> = {},\r\n    headers: Record<string, string> = {},\r\n    signal?: AbortSignal,\r\n  ): Promise<T> {\r\n    /* Query‑string ------------------------------------------------------------------------- */\r\n    const qs = Object.keys(query).length\r\n      ? '?' + new URLSearchParams(query as Record<string, string>).toString()\r\n      : '';\r\n\r\n    const url = this.apiEndpoint + path + qs;\r\n\r\n    /* Headers --------------------------------------------------------------------------------*/\r\n    const requestHeaders: Record<string, string> = {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      ...this.defaultHeaders,\r\n      ...headers,\r\n    };\r\n\r\n    /* Fetch call ----------------------------------------------------------------------------*/\r\n    const resp = await fetch(url, {\r\n      method,\r\n      headers: requestHeaders,\r\n      body: body ? JSON.stringify(body) : undefined,\r\n      signal,\r\n    });\r\n\r\n    /* Error handling ------------------------------------------------------------------------*/\r\n    if (!resp.ok) {\r\n      throw new MendError(`HTTP ${resp.status} – ${resp.statusText}`, ERROR_CODES.HTTP_ERROR, resp.status);\r\n    }\r\n\r\n    /* Some endpoints return empty body (204). Attempt JSON parse only when content exists. */\r\n    const text = await resp.text();\r\n    return text ? (JSON.parse(text) as T) : (undefined as unknown as T);\r\n  }\r\n}\r\n\r\n/**\r\n * Create a new HTTP client instance\r\n */\r\nexport function createHttpClient(config: HttpClientConfig): HttpClient {\r\n  return new HttpClient(config);\r\n}\r\n"],"mappings":"AAAA,SAAS,WAAW,mBAAmB;AAuBhC,aAAM,WAAW;AAAA,EAItB,YAAY,QAA0B;AACpC,SAAK,cAAc,OAAO,YAAY,QAAQ,OAAO,EAAE;AACvD,SAAK,iBAAiB,OAAO,kBAAkB,CAAC;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,MAAa,MACX,QACA,MACA,MACA,QAAmD,CAAC,GACpD,UAAkC,CAAC,GACnC,QACY;AAEZ,UAAM,KAAK,OAAO,KAAK,KAAK,EAAE,SAC1B,MAAM,IAAI,gBAAgB,KAA+B,EAAE,SAAS,IACpE;AAEJ,UAAM,MAAM,KAAK,cAAc,OAAO;AAGtC,UAAM,iBAAyC;AAAA,MAC7C,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,GAAG,KAAK;AAAA,MACR,GAAG;AAAA,IACL;AAGA,UAAM,OAAO,MAAM,MAAM,KAAK;AAAA,MAC5B;AAAA,MACA,SAAS;AAAA,MACT,MAAM,OAAO,KAAK,UAAU,IAAI,IAAI;AAAA,MACpC;AAAA,IACF,CAAC;AAGD,QAAI,CAAC,KAAK,IAAI;AACZ,YAAM,IAAI,UAAU,QAAQ,KAAK,MAAM,MAAM,KAAK,UAAU,IAAI,YAAY,YAAY,KAAK,MAAM;AAAA,IACrG;AAGA,UAAM,OAAO,MAAM,KAAK,KAAK;AAC7B,WAAO,OAAQ,KAAK,MAAM,IAAI,IAAW;AAAA,EAC3C;AACF;AAKO,gBAAS,iBAAiB,QAAsC;AACrE,SAAO,IAAI,WAAW,MAAM;AAC9B;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3584e0db7b21cf6bc75cc37e4bafdb8243e2ac32"},"C:/Users/mattm/Documents/GitHub/mend-sdk/src/mutex.ts":{"path":"C:/Users/mattm/Documents/GitHub/mend-sdk/src/mutex.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":35}},"1":{"start":{"line":12,"column":24},"end":{"line":14,"column":6}},"2":{"start":{"line":13,"column":6},"end":{"line":13,"column":23}},"3":{"start":{"line":15,"column":21},"end":{"line":15,"column":31}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":52}},"5":{"start":{"line":16,"column":39},"end":{"line":16,"column":50}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":19}},"7":{"start":{"line":18,"column":4},"end":{"line":22,"column":5}},"8":{"start":{"line":19,"column":6},"end":{"line":19,"column":24}},"9":{"start":{"line":21,"column":6},"end":{"line":21,"column":15}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":2},"end":{"line":2,"column":3}},"loc":{"start":{"line":2,"column":16},"end":{"line":4,"column":3}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":2},"end":{"line":10,"column":3}},"loc":{"start":{"line":10,"column":17},"end":{"line":23,"column":3}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":36},"end":{"line":12,"column":37}},"loc":{"start":{"line":12,"column":49},"end":{"line":14,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":33},"end":{"line":16,"column":34}},"loc":{"start":{"line":16,"column":39},"end":{"line":16,"column":50}},"line":16}},"branchMap":{},"s":{"0":19,"1":19,"2":19,"3":19,"4":19,"5":19,"6":19,"7":19,"8":19,"9":19},"f":{"0":19,"1":19,"2":19,"3":19},"b":{},"inputSourceMap":{"version":3,"sources":["C:/Users/mattm/Documents/GitHub/mend-sdk/src/mutex.ts"],"sourcesContent":["/**\r\n * A simple mutex implementation to prevent concurrent operations\r\n */\r\nexport class Mutex {\r\n  private mutex = Promise.resolve();\r\n  \r\n  /**\r\n   * Acquire the lock and execute the provided function\r\n   * @param fn Function to execute with the lock\r\n   * @returns Promise that resolves with the result of the function\r\n   */\r\n  async lock<T>(fn: () => Promise<T>): Promise<T> {\r\n    let unlock: () => void;\r\n    \r\n    // Create a new promise that will be resolved when the mutex is released\r\n    const acquireLock = new Promise<void>(resolve => {\r\n      unlock = resolve;\r\n    });\r\n    \r\n    // Chain the new promise after the existing mutex\r\n    const oldMutex = this.mutex;\r\n    this.mutex = this.mutex.then(() => acquireLock);\r\n    \r\n    // Wait for the previous operation to complete\r\n    await oldMutex;\r\n    \r\n    try {\r\n      // Execute the function with the lock acquired\r\n      return await fn();\r\n    } finally {\r\n      // Release the lock regardless of success or failure\r\n      unlock!();\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAGO,aAAM,MAAM;AAAA,EAAZ;AACL,SAAQ,QAAQ,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOhC,MAAM,KAAQ,IAAkC;AAC9C,QAAI;AAGJ,UAAM,cAAc,IAAI,QAAc,aAAW;AAC/C,eAAS;AAAA,IACX,CAAC;AAGD,UAAM,WAAW,KAAK;AACtB,SAAK,QAAQ,KAAK,MAAM,KAAK,MAAM,WAAW;AAG9C,UAAM;AAEN,QAAI;AAEF,aAAO,MAAM,GAAG;AAAA,IAClB,UAAE;AAEA,aAAQ;AAAA,IACV;AAAA,EACF;AACF;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80ac2d20b476e2e77a10a2d03b6f499be90acc7d"},"C:/Users/mattm/Documents/GitHub/mend-sdk/src/index.ts":{"path":"C:/Users/mattm/Documents/GitHub/mend-sdk/src/index.ts","statementMap":{"0":{"start":{"line":9,"column":4},"end":{"line":9,"column":33}},"1":{"start":{"line":10,"column":4},"end":{"line":10,"column":28}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":30}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":20}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":26}},"5":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"6":{"start":{"line":15,"column":6},"end":{"line":15,"column":98}},"7":{"start":{"line":17,"column":4},"end":{"line":20,"column":7}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":28}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":34}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":28}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":32}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":40}},"13":{"start":{"line":31,"column":16},"end":{"line":40,"column":5}},"14":{"start":{"line":41,"column":18},"end":{"line":41,"column":27}},"15":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"16":{"start":{"line":43,"column":6},"end":{"line":43,"column":36}},"17":{"start":{"line":44,"column":6},"end":{"line":44,"column":13}},"18":{"start":{"line":46,"column":4},"end":{"line":49,"column":5}},"19":{"start":{"line":47,"column":6},"end":{"line":47,"column":45}},"20":{"start":{"line":48,"column":6},"end":{"line":48,"column":13}},"21":{"start":{"line":50,"column":4},"end":{"line":50,"column":88}},"22":{"start":{"line":53,"column":18},"end":{"line":53,"column":27}},"23":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"24":{"start":{"line":55,"column":6},"end":{"line":55,"column":90}},"25":{"start":{"line":57,"column":4},"end":{"line":57,"column":21}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":57}},"27":{"start":{"line":59,"column":20},"end":{"line":59,"column":32}},"28":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"29":{"start":{"line":61,"column":6},"end":{"line":61,"column":40}},"30":{"start":{"line":63,"column":4},"end":{"line":75,"column":5}},"31":{"start":{"line":64,"column":6},"end":{"line":64,"column":39}},"32":{"start":{"line":66,"column":6},"end":{"line":69,"column":7}},"33":{"start":{"line":67,"column":21},"end":{"line":67,"column":42}},"34":{"start":{"line":68,"column":8},"end":{"line":68,"column":95}},"35":{"start":{"line":70,"column":6},"end":{"line":74,"column":7}},"36":{"start":{"line":71,"column":22},"end":{"line":71,"column":43}},"37":{"start":{"line":72,"column":19},"end":{"line":72,"column":42}},"38":{"start":{"line":73,"column":8},"end":{"line":73,"column":41}},"39":{"start":{"line":73,"column":16},"end":{"line":73,"column":41}},"40":{"start":{"line":78,"column":4},"end":{"line":78,"column":59}},"41":{"start":{"line":78,"column":52},"end":{"line":78,"column":59}},"42":{"start":{"line":79,"column":4},"end":{"line":83,"column":7}},"43":{"start":{"line":80,"column":6},"end":{"line":82,"column":7}},"44":{"start":{"line":81,"column":8},"end":{"line":81,"column":34}},"45":{"start":{"line":99,"column":4},"end":{"line":99,"column":28}},"46":{"start":{"line":100,"column":24},"end":{"line":100,"column":26}},"47":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"48":{"start":{"line":102,"column":6},"end":{"line":102,"column":47}},"49":{"start":{"line":104,"column":4},"end":{"line":111,"column":6}},"50":{"start":{"line":117,"column":4},"end":{"line":117,"column":72}},"51":{"start":{"line":120,"column":4},"end":{"line":120,"column":74}},"52":{"start":{"line":123,"column":4},"end":{"line":123,"column":66}},"53":{"start":{"line":126,"column":4},"end":{"line":126,"column":73}},"54":{"start":{"line":129,"column":4},"end":{"line":129,"column":91}},"55":{"start":{"line":132,"column":17},"end":{"line":132,"column":54}},"56":{"start":{"line":133,"column":4},"end":{"line":133,"column":63}},"57":{"start":{"line":136,"column":17},"end":{"line":136,"column":66}},"58":{"start":{"line":137,"column":4},"end":{"line":137,"column":62}},"59":{"start":{"line":140,"column":4},"end":{"line":140,"column":76}},"60":{"start":{"line":143,"column":4},"end":{"line":143,"column":88}},"61":{"start":{"line":146,"column":4},"end":{"line":146,"column":73}},"62":{"start":{"line":149,"column":4},"end":{"line":149,"column":63}},"63":{"start":{"line":155,"column":24},"end":{"line":155,"column":26}},"64":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"65":{"start":{"line":157,"column":6},"end":{"line":157,"column":47}},"66":{"start":{"line":159,"column":16},"end":{"line":166,"column":5}},"67":{"start":{"line":167,"column":4},"end":{"line":167,"column":34}},"68":{"start":{"line":170,"column":4},"end":{"line":170,"column":75}},"69":{"start":{"line":171,"column":4},"end":{"line":171,"column":29}},"70":{"start":{"line":174,"column":4},"end":{"line":174,"column":68}},"71":{"start":{"line":177,"column":18},"end":{"line":177,"column":50}},"72":{"start":{"line":178,"column":4},"end":{"line":178,"column":45}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":20},"end":{"line":26,"column":3}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":23},"end":{"line":51,"column":3}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":52,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":52,"column":27},"end":{"line":76,"column":3}},"line":52},"3":{"name":"(anonymous_3)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":21},"end":{"line":84,"column":3}},"line":77},"4":{"name":"(anonymous_4)","decl":{"start":{"line":79,"column":30},"end":{"line":79,"column":31}},"loc":{"start":{"line":79,"column":42},"end":{"line":83,"column":5}},"line":79},"5":{"name":"(anonymous_5)","decl":{"start":{"line":98,"column":2},"end":{"line":98,"column":3}},"loc":{"start":{"line":98,"column":51},"end":{"line":112,"column":3}},"line":98},"6":{"name":"(anonymous_6)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":30},"end":{"line":118,"column":3}},"line":116},"7":{"name":"(anonymous_7)","decl":{"start":{"line":119,"column":2},"end":{"line":119,"column":3}},"loc":{"start":{"line":119,"column":32},"end":{"line":121,"column":3}},"line":119},"8":{"name":"(anonymous_8)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":43},"end":{"line":124,"column":3}},"line":122},"9":{"name":"(anonymous_9)","decl":{"start":{"line":125,"column":2},"end":{"line":125,"column":3}},"loc":{"start":{"line":125,"column":31},"end":{"line":127,"column":3}},"line":125},"10":{"name":"(anonymous_10)","decl":{"start":{"line":128,"column":2},"end":{"line":128,"column":3}},"loc":{"start":{"line":128,"column":47},"end":{"line":130,"column":3}},"line":128},"11":{"name":"(anonymous_11)","decl":{"start":{"line":131,"column":2},"end":{"line":131,"column":3}},"loc":{"start":{"line":131,"column":54},"end":{"line":134,"column":3}},"line":131},"12":{"name":"(anonymous_12)","decl":{"start":{"line":135,"column":2},"end":{"line":135,"column":3}},"loc":{"start":{"line":135,"column":58},"end":{"line":138,"column":3}},"line":135},"13":{"name":"(anonymous_13)","decl":{"start":{"line":139,"column":2},"end":{"line":139,"column":3}},"loc":{"start":{"line":139,"column":34},"end":{"line":141,"column":3}},"line":139},"14":{"name":"(anonymous_14)","decl":{"start":{"line":142,"column":2},"end":{"line":142,"column":3}},"loc":{"start":{"line":142,"column":46},"end":{"line":144,"column":3}},"line":142},"15":{"name":"(anonymous_15)","decl":{"start":{"line":145,"column":2},"end":{"line":145,"column":3}},"loc":{"start":{"line":145,"column":43},"end":{"line":147,"column":3}},"line":145},"16":{"name":"(anonymous_16)","decl":{"start":{"line":148,"column":2},"end":{"line":148,"column":3}},"loc":{"start":{"line":148,"column":25},"end":{"line":150,"column":3}},"line":148},"17":{"name":"(anonymous_17)","decl":{"start":{"line":154,"column":2},"end":{"line":154,"column":3}},"loc":{"start":{"line":154,"column":36},"end":{"line":168,"column":3}},"line":154},"18":{"name":"(anonymous_18)","decl":{"start":{"line":169,"column":2},"end":{"line":169,"column":3}},"loc":{"start":{"line":169,"column":33},"end":{"line":172,"column":3}},"line":169},"19":{"name":"(anonymous_19)","decl":{"start":{"line":173,"column":2},"end":{"line":173,"column":3}},"loc":{"start":{"line":173,"column":30},"end":{"line":175,"column":3}},"line":173},"20":{"name":"(anonymous_20)","decl":{"start":{"line":176,"column":2},"end":{"line":176,"column":3}},"loc":{"start":{"line":176,"column":33},"end":{"line":179,"column":3}},"line":176}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{},"end":{}}],"line":14},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":61}},"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":26}},{"start":{"line":14,"column":30},"end":{"line":14,"column":42}},{"start":{"line":14,"column":46},"end":{"line":14,"column":61}}],"line":14},"2":{"loc":{"start":{"line":25,"column":20},"end":{"line":25,"column":39}},"type":"binary-expr","locations":[{"start":{"line":25,"column":20},"end":{"line":25,"column":33}},{"start":{"line":25,"column":37},"end":{"line":25,"column":39}}],"line":25},"3":{"loc":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},{"start":{},"end":{}}],"line":42},"4":{"loc":{"start":{"line":46,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":46},"5":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{},"end":{}}],"line":54},"6":{"loc":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},{"start":{},"end":{}}],"line":60},"7":{"loc":{"start":{"line":63,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":75,"column":5}},{"start":{"line":65,"column":11},"end":{"line":75,"column":5}}],"line":63},"8":{"loc":{"start":{"line":66,"column":6},"end":{"line":69,"column":7}},"type":"if","locations":[{"start":{"line":66,"column":6},"end":{"line":69,"column":7}},{"start":{},"end":{}}],"line":66},"9":{"loc":{"start":{"line":68,"column":29},"end":{"line":68,"column":94}},"type":"cond-expr","locations":[{"start":{"line":68,"column":60},"end":{"line":68,"column":72}},{"start":{"line":68,"column":75},"end":{"line":68,"column":94}}],"line":68},"10":{"loc":{"start":{"line":70,"column":6},"end":{"line":74,"column":7}},"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":74,"column":7}},{"start":{},"end":{}}],"line":70},"11":{"loc":{"start":{"line":70,"column":10},"end":{"line":70,"column":78}},"type":"binary-expr","locations":[{"start":{"line":70,"column":10},"end":{"line":70,"column":43}},{"start":{"line":70,"column":47},"end":{"line":70,"column":78}}],"line":70},"12":{"loc":{"start":{"line":72,"column":19},"end":{"line":72,"column":42}},"type":"binary-expr","locations":[{"start":{"line":72,"column":19},"end":{"line":72,"column":27}},{"start":{"line":72,"column":31},"end":{"line":72,"column":42}}],"line":72},"13":{"loc":{"start":{"line":73,"column":8},"end":{"line":73,"column":41}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":41}},{"start":{},"end":{}}],"line":73},"14":{"loc":{"start":{"line":78,"column":4},"end":{"line":78,"column":59}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":59}},{"start":{},"end":{}}],"line":78},"15":{"loc":{"start":{"line":78,"column":8},"end":{"line":78,"column":50}},"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":16}},{"start":{"line":78,"column":20},"end":{"line":78,"column":50}}],"line":78},"16":{"loc":{"start":{"line":80,"column":6},"end":{"line":82,"column":7}},"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":82,"column":7}},{"start":{},"end":{}}],"line":80},"17":{"loc":{"start":{"line":80,"column":10},"end":{"line":80,"column":54}},"type":"binary-expr","locations":[{"start":{"line":80,"column":10},"end":{"line":80,"column":19}},{"start":{"line":80,"column":23},"end":{"line":80,"column":54}}],"line":80},"18":{"loc":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},{"start":{},"end":{}}],"line":101},"19":{"loc":{"start":{"line":108,"column":6},"end":{"line":108,"column":17}},"type":"binary-expr","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":11}},{"start":{"line":108,"column":15},"end":{"line":108,"column":17}}],"line":108},"20":{"loc":{"start":{"line":122,"column":23},"end":{"line":122,"column":33}},"type":"default-arg","locations":[{"start":{"line":122,"column":31},"end":{"line":122,"column":33}}],"line":122},"21":{"loc":{"start":{"line":131,"column":31},"end":{"line":131,"column":44}},"type":"default-arg","locations":[{"start":{"line":131,"column":39},"end":{"line":131,"column":44}}],"line":131},"22":{"loc":{"start":{"line":132,"column":17},"end":{"line":132,"column":54}},"type":"cond-expr","locations":[{"start":{"line":132,"column":25},"end":{"line":132,"column":41}},{"start":{"line":132,"column":44},"end":{"line":132,"column":54}}],"line":132},"23":{"loc":{"start":{"line":135,"column":35},"end":{"line":135,"column":48}},"type":"default-arg","locations":[{"start":{"line":135,"column":43},"end":{"line":135,"column":48}}],"line":135},"24":{"loc":{"start":{"line":136,"column":17},"end":{"line":136,"column":66}},"type":"cond-expr","locations":[{"start":{"line":136,"column":25},"end":{"line":136,"column":47}},{"start":{"line":136,"column":50},"end":{"line":136,"column":66}}],"line":136},"25":{"loc":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},{"start":{},"end":{}}],"line":156}},"s":{"0":19,"1":19,"2":19,"3":19,"4":19,"5":19,"6":0,"7":19,"8":19,"9":19,"10":19,"11":19,"12":19,"13":19,"14":19,"15":19,"16":19,"17":19,"18":0,"19":0,"20":0,"21":0,"22":19,"23":19,"24":0,"25":19,"26":19,"27":19,"28":19,"29":19,"30":19,"31":19,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":38,"41":19,"42":19,"43":19,"44":19,"45":38,"46":38,"47":38,"48":38,"49":38,"50":1,"51":1,"52":1,"53":1,"54":1,"55":2,"56":2,"57":2,"58":2,"59":1,"60":1,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":20,"69":20,"70":2,"71":1,"72":1},"f":{"0":19,"1":19,"2":19,"3":38,"4":19,"5":38,"6":1,"7":1,"8":1,"9":1,"10":1,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1,"17":0,"18":20,"19":2,"20":1},"b":{"0":[0,19],"1":[19,19,19],"2":[19,19],"3":[19,0],"4":[0,0],"5":[0,19],"6":[19,0],"7":[19,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[19,19],"15":[38,19],"16":[19,0],"17":[19,0],"18":[38,0],"19":[38,36],"20":[0],"21":[1],"22":[1,1],"23":[1],"24":[1,1],"25":[0,0]},"inputSourceMap":{"version":3,"sources":["C:/Users/mattm/Documents/GitHub/mend-sdk/src/index.ts"],"sourcesContent":["// mend-sdk.ts\n// Lightweight Type‑Safe Mend SDK (fetch‑based)\n// ---------------------------------------------------------------------------\n// • Written in **TypeScript** so consumers get full IntelliSense.\n// • Uses the native `fetch()` API (+AbortController) instead of axios.\n// • Emits purposeful errors with `code` fields so callers can branch.\n// • **No runtime React dep** – a React‑specific layer can live in\n//   `@mend/sdk/react` later if you wish.\n// ---------------------------------------------------------------------------\nimport { MendError, ERROR_CODES } from './errors';\nimport { HttpClient, HttpVerb, Json, createHttpClient } from './http';\nimport { Mutex } from './mutex';\n\n/* ------------------------------------------------------------------------------------------------\n * Public Types\n * ----------------------------------------------------------------------------------------------*/\n\nexport interface MendSdkOptions {\n  /** Base REST endpoint, e.g. \"https://api.mend.com/v2\" (no trailing slash) */\n  apiEndpoint: string;\n  /** Admin/service account credentials */\n  email: string;\n  password: string;\n  /** Optional organization ID to automatically switch to after login */\n  orgId?: number;\n  /** Optional MFA code for accounts that require it */\n  mfaCode?: string | number;\n  /** Minutes before JWT refresh (default 55) */\n  tokenTTL?: number;\n  /** Optional default headers passed to **every** request (apart from auth headers). */\n  defaultHeaders?: Record<string, string>;\n}\n\n// Re-export MendError for consumers\nexport { MendError, ERROR_CODES } from './errors';\nexport { Json } from './http';\n\n/* ------------------------------------------------------------------------------------------------\n * Main SDK Class\n * ----------------------------------------------------------------------------------------------*/\n\nexport class MendSdk {\n  private readonly httpClient: HttpClient;\n  private readonly email: string;\n  private readonly password: string;\n  private readonly orgId?: number;\n  private readonly mfaCode?: string | number;\n  private readonly tokenTTL: number;\n  private readonly authMutex = new Mutex();\n\n  private activeOrgId: number | null = null;\n  private availableOrgs: Json<any>[] | null = null;\n\n  private jwt: string | null = null;\n  private jwtExpiresAt = 0; // epoch ms\n\n  constructor(opts: MendSdkOptions) {\n    if (!opts?.apiEndpoint || !opts?.email || !opts?.password) {\n      throw new MendError('apiEndpoint, email and password are required', ERROR_CODES.SDK_CONFIG);\n    }\n\n    this.httpClient = createHttpClient({\n      apiEndpoint: opts.apiEndpoint,\n      defaultHeaders: opts.defaultHeaders,\n    });\n    \n    this.email = opts.email;\n    this.password = opts.password;\n    this.orgId = opts.orgId;\n    this.mfaCode = opts.mfaCode;\n    this.tokenTTL = opts.tokenTTL ?? 55;\n  }\n\n  /* ------------------------------------------------------------------------------------------ */\n  /* Authentication                                                                            */\n  /* ------------------------------------------------------------------------------------------ */\n\n  private async authenticate(): Promise<void> {\n    const res = await this.httpClient.fetch<Json<any>>(\n      'POST',\n      '/session',\n      {\n        email: this.email,\n        password: this.password,\n      },\n      {},\n      {},\n    );\n\n    const token = (res as any).token as string | undefined;\n    if (token) {\n      await this.completeLogin(res);\n      return;\n    }\n\n    if (this.mfaCode !== undefined) {\n      await this.submitMfaCode(this.mfaCode);\n      return;\n    }\n\n    throw new MendError('JWT not returned by /session', ERROR_CODES.AUTH_MISSING_TOKEN);\n  }\n\n  private async completeLogin(res: Json<any>): Promise<void> {\n    const token = (res as any).token as string | undefined;\n    if (!token) {\n      throw new MendError('JWT not returned by /session', ERROR_CODES.AUTH_MISSING_TOKEN);\n    }\n\n    this.jwt = token;\n    this.jwtExpiresAt = Date.now() + this.tokenTTL * 60_000;\n\n    const payload = (res as any)?.payload;\n    if (Array.isArray(payload?.orgs)) {\n      this.availableOrgs = payload.orgs;\n    }\n\n    if (this.orgId !== undefined) {\n      await this.switchOrg(this.orgId);\n    } else {\n      if (!this.availableOrgs) {\n        const orgs = await this.listOrgs();\n        this.availableOrgs = Array.isArray(orgs?.payload)\n          ? (orgs as any).payload\n          : (orgs as any)?.payload?.orgs;\n      }\n      if (Array.isArray(this.availableOrgs) && this.availableOrgs.length === 1) {\n        const first = this.availableOrgs[0];\n        const id = (first as any).id ?? (first as any).orgId;\n        if (id) await this.switchOrg(id);\n      }\n    }\n  }\n\n  private async ensureAuth(): Promise<void> {\n    // Use mutex to prevent multiple concurrent authentication attempts\n  // Fast-path: token still valid → no locking required\n  if (this.jwt && Date.now() < this.jwtExpiresAt) return;\n\n   await this.authMutex.lock(async () => {\n    // Double-check in case another waiter already refreshed the token\n    if (!this.jwt || Date.now() >= this.jwtExpiresAt) {\n      await this.authenticate();\n    }\n   });\n  }\n\n  /* ------------------------------------------------------------------------------------------ */\n  /* API Request Methods                                                                       */\n  /* ------------------------------------------------------------------------------------------ */\n\n  /**\n   * Make a request to the API with authentication handling\n   * \n   * ```ts\n   * const response = await sdk.request('GET', '/user/me');\n   * const ctrl = new AbortController();\n   * const response2 = await sdk.request('GET', '/patients', null, {}, ctrl.signal);\n   * // ctrl.abort();\n   * ```\n   */\n  public async request<T = Json<any>>(\n    method: HttpVerb,\n    path: string,\n    body?: unknown,\n    query?: Record<string, string | number | boolean>,\n    signal?: AbortSignal,\n  ): Promise<T> {\n    await this.ensureAuth();\n    \n    // Initialize empty headers object as Record<string, string>\n    const authHeaders: Record<string, string> = {};\n    \n    // Only add the token if it exists\n    if (this.jwt) {\n      authHeaders['X-Access-Token'] = this.jwt;\n    }\n    \n    return this.httpClient.fetch<T>(\n      method,\n      path,\n      body,\n      query || {},\n      authHeaders,\n      signal\n    );\n  }\n\n  /* ------------------------------------------------------------------------------------------ */\n  /* Sample convenience wrappers – extend as required                                          */\n  /* ------------------------------------------------------------------------------------------ */\n\n  public async getOrg<T = Json<any>>(orgId: number, signal?: AbortSignal): Promise<T> {\n    return this.request<T>('GET', `/org/${orgId}`, undefined, undefined, signal);\n  }\n\n  public async getUser<T = Json<any>>(userId: number, signal?: AbortSignal): Promise<T> {\n    return this.request<T>('GET', `/user/${userId}`, undefined, undefined, signal);\n  }\n\n  public async searchPatients<T = Json<any>>(\n    query: Record<string, string | number | boolean> = {},\n    signal?: AbortSignal,\n  ): Promise<T> {\n    return this.request<T>('GET', '/patient', undefined, query, signal);\n  }\n\n  public async getPatient<T = Json<any>>(id: number, signal?: AbortSignal): Promise<T> {\n    return this.request<T>('GET', `/patient/${id}`, undefined, undefined, signal);\n  }\n\n  public async getPatientAssessmentScores<T = Json<any>>(id: number, signal?: AbortSignal): Promise<T> {\n    return this.request<T>('GET', `/patient/${id}/assessment-scores`, undefined, undefined, signal);\n  }\n\n  public async createPatient<T = Json<any>>(payload: Json<any>, force = false, signal?: AbortSignal): Promise<T> {\n    const path = force ? '/patient/force' : '/patient';\n    return this.request<T>('POST', path, payload, undefined, signal);\n  }\n\n  public async updatePatient<T = Json<any>>(id: number, payload: Json<any>, force = false, signal?: AbortSignal): Promise<T> {\n    const path = force ? `/patient/${id}/force` : `/patient/${id}`;\n    return this.request<T>('PUT', path, payload, undefined, signal);\n  }\n\n  public async deletePatient<T = Json<any>>(id: number, signal?: AbortSignal): Promise<T> {\n    return this.request<T>('DELETE', `/patient/${id}`, undefined, undefined, signal);\n  }\n\n  public async getAppointment<T = Json<any>>(appointmentId: number, signal?: AbortSignal): Promise<T> {\n    return this.request<T>('GET', `/appointment/${appointmentId}`, undefined, undefined, signal);\n  }\n\n  public async createAppointment<T = Json<any>>(payload: Json<any>, signal?: AbortSignal): Promise<T> {\n    return this.request<T>('POST', '/appointment', payload, undefined, signal);\n  }\n\n  public async listOrgs<T = Json<any>>(signal?: AbortSignal): Promise<T> {\n    return this.request<T>('GET', '/org', undefined, undefined, signal);\n  }\n\n  /**\n   * Submit MFA code to complete authentication (when 2FA is enabled on the account)\n   */\n  public async submitMfaCode(code: string | number, signal?: AbortSignal): Promise<void> {\n    // This is a special case - we need to bypass the normal auth flow\n    // Initialize empty headers object as Record<string, string>\n    const authHeaders: Record<string, string> = {};\n    \n    // Only add the token if it exists\n    if (this.jwt) {\n      authHeaders['X-Access-Token'] = this.jwt;\n    }\n    \n    const res = await this.httpClient.fetch<Json<any>>(\n      'PUT',\n      '/session/mfa',\n      { mfaCode: code },\n      {},\n      authHeaders,\n      signal\n    );\n    \n    await this.completeLogin(res);\n  }\n\n  public async switchOrg(orgId: number, signal?: AbortSignal): Promise<void> {\n    await this.request<Json<any>>('PUT', `/session/org/${orgId}`, {}, undefined, signal);\n    this.activeOrgId = orgId;\n  }\n\n  public async getProperties<T = Json<any>>(signal?: AbortSignal): Promise<T> {\n    return this.request<T>('GET', '/property', undefined, undefined, signal);\n  }\n\n  public async getProperty<T = Json<any>>(key: string, signal?: AbortSignal): Promise<T> {\n    const props = await this.getProperties<T>(signal);\n    return (props as any)?.payload?.properties?.[key];\n  }\n}\n\n/* ------------------------------------------------------------------------------------------------\n * Default export for CJS interop\n * ----------------------------------------------------------------------------------------------*/\nexport default MendSdk;\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6c2318fc62a446166fcf7864b1f7fa155b15a9e0"}}